# This file is in the public domain. Feel free to modify it as a basis
# for your own screens.

##############################################################################
# Say
#
# Screen that's used to display adv-mode dialogue.
# http://www.renpy.org/doc/html/screen_special.html#say
screen say:

    # Defaults for side_image and two_window
    default side_image = None
    default two_window = False

    # Decide if we want to use the one-window or two-window varaint.
    if not two_window:

        # The one window variant.        
        window:
            id "window"

            has vbox:
                style "say_vbox"

            if who:
                text who id "who"

            text what id "what"

    else:

        # The two window variant.
        vbox:
            style "say_two_window_vbox"

            if who:            
                window:
                    style "say_who_window"

                    text who:
                        id "who"
                        
            window:
                id "window"

                has vbox:
                    style "say_vbox"

                text what id "what"
              
    # If there's a side image, display it above the text.
    if side_image:
        add side_image
    else:
        add SideImage() xalign 0.0 yalign 1.0

    # Use the quick menu.
    use quick_menu


##############################################################################
# Choice
#
# Screen that's used to display in-game menus.
# http://www.renpy.org/doc/html/screen_special.html#choice

screen choice:
    
    window: 
        style "menu_window"
        xalign 0.5
        yalign 0.5
        
        vbox:
            style "menu"
            spacing 2
            
            for caption, action, chosen in items:
                
                if action:  
                    
                    button:
                        action action
                        style "menu_choice_button"                        

                        text caption style "menu_choice"
                    
                else:
                    text caption style "menu_caption"

init -2 python:
    config.narrator_menu = True
    
    style.menu_window.set_parent(style.default)
    style.menu_choice.set_parent(style.button_text)
    style.menu_choice.clear()
    style.menu_choice_button.set_parent(style.button)
    style.menu_choice_button.xminimum = int(config.screen_width * 1.50)
    style.menu_choice_button.xmaximum = int(config.screen_width * 1.50)
    style.menu_choice_button.background = Frame("gui/game/menu_idle.png",0,0)
    style.menu_choice_button.hover_background = Frame("gui/game/menu_hover.png",0,0)
    style.menu_choice.font = "CENTAUR.TTF"
    style.menu_choice.color = "#00a2ff"
    style.menu_choice.outlines = [(1, "#1800ff", 0, 0)] 
    style.menu_choice.hover_color = "#1800ff"
    style.menu_choice.hover_outlines = [(1, "#00a2ff", 0, 0)] 

##############################################################################
# Input
#
# Screen that's used to display renpy.input()
# http://www.renpy.org/doc/html/screen_special.html#input

screen input:

    window style "input_window":
        has vbox

        text prompt style "input_prompt"
        input id "input" style "input_text"

    use quick_menu
        
##############################################################################
# Nvl
#
# Screen used for nvl-mode dialogue and menus.
# http://www.renpy.org/doc/html/screen_special.html#nvl

screen nvl:

    window:
        style "nvl_window"

        has vbox:
            style "nvl_vbox"

        # Display dialogue.
        for who, what, who_id, what_id, window_id in dialogue:
            window:
                id window_id

                has hbox:
                    spacing 10

                if who is not None:
                    text who id who_id

                text what id what_id

        # Display a menu, if given.
        if items:

            vbox:
                id "menu"

                for caption, action, chosen in items:

                    if action:

                        button:
                            style "nvl_menu_choice_button"
                            action action

                            text caption style "nvl_menu_choice"

                    else:

                        text caption style "nvl_dialogue"

    add SideImage() xalign 0.0 yalign 1.0
    
    use quick_menu
        
##############################################################################
# Main Menu 
#
# Screen that's used to display the main menu, when Ren'Py first starts
# http://www.renpy.org/doc/html/screen_special.html#main-menu

screen main_menu:
    
    tag menu
        
    window:
        style "mm_root"

    imagemap:
        ground "gui/mainmenu/mainmenu_ground.png"
        hover "gui/mainmenu/mainmenu_hover.png"
        
        hotspot (218,443,189,91) action Start()
        hotspot (435,443,183,89) action ShowMenu("load")
        hotspot (650,441,199,93) action ShowMenu("preferences")
        hotspot (884,446,177,96) action Quit(confirm=False)

init -2 python:

    # Make all the main menu buttons be the same size.
    style.mm_button.size_group = "mm"


##############################################################################
# Navigation
#
# Screen that's included in other screens to display the game menu
# navigation and background.
# http://www.renpy.org/doc/html/screen_special.html#navigation
screen navigation:

    # The background of the game menu.
    window:
        style "gm_root"

    # The various buttons.
    imagemap:
        auto "menu/navigation_%s.png"
        ground "gui/navigation/navigation_ground.png"
        idle "gui/navigation/navigation_idle.png"
        hover "gui/navigation/navigation_hover.png"
        selected_idle "gui/navigation/navigation_selectdot.png"
        selected_hover "gui/navigation/navigation_selectdot.png"
        
        hotspot (12,590,197,62) action Return()
        hotspot (240,590,131,62) action ShowMenu("save")
        hotspot (400,587,134,65) action ShowMenu("load")
        hotspot (558,583,153,71) action ShowMenu("preferences")
        hotspot (737,590,308,64) action MainMenu()
        hotspot (1069,590,134,68) action Quit()

init -2 python:
    style.gm_nav_button.size_group = "gm_nav"
    

##############################################################################
# Save, Load
#
# Screens that allow the user to save and load the game.
# http://www.renpy.org/doc/html/screen_special.html#save
# http://www.renpy.org/doc/html/screen_special.html#load

# Since saving and loading are so similar, we combine them into
# a single screen, file_picker. We then use the file_picker screen
# from simple load and save screens.

screen load_save_slot:
    $ file_text = "%2s. %s\n  %s" % (
                        FileSlotName(number, 6),
                        FileTime(number, empty=_("Empty Slot.")),
                        FileSaveName(number))
    
    add FileScreenshot(number) xpos 10 ypos 10
    text file_text xpos 75 ypos 78 size 25 color "#ffffff"
    
screen file_picker:
    use navigation
    imagemap:
            ground "gui/saveload/saveload_idle.png"
            idle "gui/saveload/saveload_idle.png"
            hover "gui/saveload/saveload_hover.png"

            hotspot (1010,167,92,97) clicked FilePage(1)
            hotspot (1123,168,91,92) clicked FilePage(2)
            hotspot (1011,259,92,90) clicked FilePage(3)
            hotspot (1123,257,91,92) clicked FilePage(4)
            hotspot (1009,345,92,91) clicked FilePage(5)
            hotspot (1123,342,91,89) clicked FilePage(6)
            hotspot (1012,434,89,91) clicked FilePage(7)
            hotspot (1123,432,91,93) clicked FilePage(8)

            hotspot (52,166,303,196) clicked FileAction(1):
                use load_save_slot(number=1)
            hotspot (371,168,300,187) clicked FileAction(2):
                use load_save_slot(number=2)
            hotspot (682,168,313,196) clicked FileAction(3):
                use load_save_slot(number=3)
            hotspot (52,370,301,193) clicked FileAction(4):
                use load_save_slot(number=4)
            hotspot (372,369,298,193) clicked FileAction(5):
                use load_save_slot(number=5)
            hotspot (685,370,298,193) clicked FileAction(6):
                use load_save_slot(number=6)
                
screen save:
    tag menu
    use navigation
    use file_picker

screen load:
    tag menu
    use navigation
    use file_picker

init -2 python:
    style.file_picker_nav_button = Style(style.small_button)
    style.file_picker_nav_button_text = Style(style.small_button_text)
    
    style.file_picker_frame.top_margin = 85
    style.file_picker_frame.left_margin = 80
    style.file_picker_frame.right_margin = 80
    style.file_picker_frame.bottom_margin = 40

    style.file_picker_nav_button.xalign = 0.5

    style.file_picker_button = Style(style.large_button)
    style.file_picker_text = Style(style.large_button_text)
    config.thumbnail_width = 284 #284
    config.thumbnail_height = 173 #173

##############################################################################
# Preferences
#
# Screen that allows the user to change the preferences.
# http://www.renpy.org/doc/html/screen_special.html#prefereces
    
screen preferences:

    tag menu

    # Include the navigation.
    use navigation

    # Put the navigation columns in a three-wide grid.
    grid 3 1:
        style_group "prefs"
        xfill True

        # The left column.
        vbox:
            frame:
                style_group "pref"
                has vbox

                label _("Display")
                textbutton _("Window") action Preference("display", "window")
                textbutton _("Fullscreen") action Preference("display", "fullscreen")

            frame:
                style_group "pref"
                has vbox

                label _("Transitions")
                textbutton _("All") action Preference("transitions", "all")
                textbutton _("None") action Preference("transitions", "none")

            frame:
                style_group "pref"
                has vbox

                label _("Text Speed")
                bar value Preference("text speed")

            frame:
                style_group "pref"
                has vbox

                textbutton _("Joystick...") action Preference("joystick")


        vbox:
            frame:
                style_group "pref"
                has vbox

                label _("Skip")
                textbutton _("Seen Messages") action Preference("skip", "seen")
                textbutton _("All Messages") action Preference("skip", "all")

            frame:
                style_group "pref"
                has vbox

                textbutton _("Begin Skipping") action Skip()

            frame:
                style_group "pref"
                has vbox

                label _("After Choices")
                textbutton _("Stop Skipping") action Preference("after choices", "stop")
                textbutton _("Keep Skipping") action Preference("after choices", "skip")

            frame:
                style_group "pref"
                has vbox

                label _("Auto-Forward Time")
                bar value Preference("auto-forward time")

        vbox:
            frame:
                style_group "pref"
                has vbox

                label _("Music Volume")
                bar value Preference("music volume")

            frame:
                style_group "pref"
                has vbox

                label _("Sound Volume")
                bar value Preference("sound volume")

                if config.sample_sound:
                    textbutton _("Test"):
                        action Play("sound", config.sample_sound)
                        style "soundtest_button"

            frame:
                style_group "pref"
                has vbox

                label _("Voice Volume")
                bar value Preference("voice volume")

                if config.sample_voice:
                    textbutton "Test":
                        action Play("voice", config.sample_voice)
                        style "soundtest_button"

init -2 python:
    style.pref_frame.xfill = True
    style.pref_frame.xmargin = 5
    style.pref_frame.top_margin = 5

    style.pref_vbox.xfill = True

    style.pref_button.size_group = "pref"
    style.pref_button.xalign = 0.5

    style.pref_slider.xmaximum = 192
    style.pref_slider.xalign = 0.5

    style.soundtest_button.background = Frame("gui/prefs/button_idle.png",10,10)
    style.pref_button.background = Frame("gui/prefs/button_idle.png",10,10)
    style.pref_button.hover_background = Frame("gui/prefs/button_hover.png",10,10)
    style.pref_button.selected_background = Frame("gui/prefs/button_selectdot.png",10,10)
    style.pref_button.selected_hover_background = Frame("gui/prefs/button_selectdot.png",10,10)
    style.pref_button.yminimum = 70
    style.pref_button_text.color = "#1800ff"
    style.pref_button_text.size = 20
    style.pref_button_text.font = "CENTAUR.ttf"
    style.pref_button_text.hover_outlines = [(2, "#00a2ff", 0, 0)]
    style.pref_button_text.selected_outlines = [(2, "#000080", 0, 0)]
    style.pref_button_text.selected_hover_outlines = [(2, "#000080", 0, 0)]
    style.pref_label_text.color = "#0b0078"
    style.pref_label_text.outlines = [(2, "#ffffff", 0, 0)]
    style.pref_frame.background = Frame("gui/prefs/frame.png",10,10)
    style.pref_slider.left_bar = "gui/prefs/bar_full.png"
    style.pref_slider.right_bar = "gui/prefs/bar_empty.png"
    style.pref_slider.hover_left_bar = "gui/prefs/bar_hover.png"
    style.pref_slider.ymaximum = 40
    style.pref_slider.xmaximum = 250

##############################################################################
# Yes/No Prompt
#
# Screen that asks the user a yes or no question.
# http://www.renpy.org/doc/html/screen_special.html#yesno-prompt
    
screen yesno_prompt:

    modal True
    
    window:
        style "gm_root"

    imagemap:
        ground "gui/yesno/yesno_hover.png"
        idle "gui/yesno/yesno_idle.png"
        hover "gui/yesno/yesno_hover.png"
        
        hotspot (419,385,168,101) action yes_action
        hotspot (669,391,146,90) action no_action
       
    if message == layout.DELETE_SAVE:
        add "gui/yesno/yesno_deletesave.png"
       
    elif message == layout.OVERWRITE_SAVE:
        add "gui/yesno/yesno_overwritesave.png"
       
    elif message == layout.LOADING:
        add "gui/yesno/yesno_load.png"
        
    elif message == layout.MAIN_MENU:
        add "gui/yesno/yesno_mainmenu.png"
       
    elif message == layout.QUIT:
        add "gui/yesno/yesno_quit.png"


##############################################################################
# Quick Menu
#
# A screen that's included by the default say screen, and adds quick access to
# several useful functions.
screen quick_menu:

    # Add an in-game quick menu.
    hbox:
        style_group "quick"
    
        imagemap:
                ground "gui/game/quick_idle.png"
                hover "gui/game/quick_hover.png"
                selected_idle "gui/game/quick_selectdot.png"
                selected_hover "gui/game/quick_selectdot.png"
                hotspot (695,673,68,38) action ShowMenu('save')
                hotspot (771,675,72,35) action ShowMenu('load')
                hotspot (850,670,66,41) action Skip()
                hotspot (926,673,76,39) action ShowMenu('preferences')  
                hotspot (1008,674,154,37) action MainMenu()
                hotspot (1167,675,71,40) action Quit()
        
init -2 python:
    
    # Set a default value for the auto-forward time, and note that AFM is
    # turned off by default.
    config.default_afm_time = 10
    config.default_afm_enable = False
